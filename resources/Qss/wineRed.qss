/*酒红色Ui美化方案*/
/*常用颜色：
1. hover： rgba(19, 91, 65,0.7)
2. button 正常颜色： #511235 => rgba(81,18,53,1)
3. button disable 颜色：rgba(81,18,53,0.7)
*/
QWidget{
background-color:#202020;
}
/*==============QPushButton=================*/
QPushButton{
    border-radius:5px;
    color: #AAEECC;
    /*font-size:14px;*/
    min-width:80px;
    max-width:100px;
    min-height: 30px;
    background-color:#511235;
}
QPushButton:hover {
   background-color: rgba(19, 91, 65,0.7);
}

/* Increase the padding, so the text is shifted when the button is
   pressed. */
QPushButton:pressed {
    padding-left: 5px;
    padding-top: 5px;
    background-color: #d0d67c;
}
QPushButton:disabled{
	background-color:rgba(81,18,53,0.5);
}

/*==========================================*/
QSpinBox{
    background-color: rgb(30,30,30);
	color:rgb(220,220,220);
    selection-color: #0a214c;
    selection-background-color: #C19A6B;
    border-radius: 5px;
	min-height:20px;
	min-width:50px;
	max-height:25px;
	max-width:100px;
}

QSpinBox:hover {
   background-color: rgba(19, 91, 65,0.7);
}
QSpinBox:disabled{
	background-color:rgba(40,40,30,0.5);
}

/* Bold text on status bar looks awful. */
QStatusBar {
   font: normal;
}

QStatusBar::item {
    border-width: 1;
    border-color: darkkhaki;
    border-style: solid;
    border-radius: 2;
}


QTextEdit, QListView {
    background-color: #rgba(30,30,30, 1);
    selection-color: #0a214c; 
    selection-background-color: #C19A6B;
}

QListView {
    show-decoration-selected: 1;
}

QListView::item:hover {
    background-color: wheat;
}

/* A QLabel is a QFrame ... */
QLabel {
    border: none;
    padding: 0;
    background: none;
    color: white;
	min-height:30px;
	min-width:50px;
}


/* A QToolTip is a QLabel ... */
QToolTip {
    border: 2px solid darkkhaki;
    padding: 5px;
    border-radius: 3px;
    opacity: 200;
}

/* Force the dialog's buttons to follow the Windows guidelines. */
QDialogButtonBox {
    button-layout: 0;
}

QStackedWidget{
	background-color: #150507;
}



/**********Title**********/


/**********Button**********/
QTitleButton{
        background-color: rgba(255, 255, 255, 0);
        color: white;
        border: 0px;
        font: 100 10pt;
}
QTitleButton#MinMaxButton:hover{
        background-color: #D32424;
        border: 0px;
		color:black;
        font: 100 10pt;
}
QTitleButton#CloseButton:hover{
        background-color: #D32424;
        color: black;
        border: 0px;
        font: 100 10pt;
}

QToolButton{
	color:rgb(255,255,255);
	font: 12pt;
	border:none;
	background-color: rgb(45,45,48);
}
QToolButton:hover {
   background-color: rgba(0,0,0,0.7);
}

QGroupBox{
	color:rgb(220,220,220);
	border-width: 0.5px;
    border-color: darkkhaki;
    border-style: dashed;
    border-radius: 5;
}

QPlainTextEdit, QTextEdit{
	background-color: rgb(30,30,30);
	color:rgb(220,220,220);
}

/*================QLineEdit============*/
/* We reserve 1 pixel space in padding. When we get the focus,
   we kill the padding and enlarge the border. This makes the items
   glow. */
QLineEdit {
	color:#F38872;
	background-color:rgb(30,30,30,0);
    border-width: 0.5px;
    padding: 1px;
    border-style: solid;
    border-color: rgb(100,100,48);
    border-radius: 10px;
    min-height:18px;
    min-width:40px;
    max-width:120px;
    qproperty-alignment:AlignHCenter;
}

/* Nice Windows-XP-style password character. */
QLineEdit[echoMode="2"] {
    lineedit-password-character: 9679;
}

QLineEdit:hover{
    border-color:#F32B19;
    border-width: 1px;
    padding: 0px;
}
QLineEdit:focus {
    border-color:#F32B19;
    border-width: 1px;
    padding: 0px;
}
/*=============================================*/

/*===============QComboBox=====================*/
/*QComboBox 设置*/
QComboBox {
    font-size:12px;
    color:white;
    background-color:#531b36;
    min-width: 60px;
    min-height: 20px;
    max-height: 30px;
    border-radius: 8px;
    padding:1px 1px 1px 10px;
}
/*可编辑的combobox的编辑框*/
QComboBox::edit-focus{
background-color: rgba(19, 91, 65,0.7);
}

QComboBox:hover{
    background-color: rgba(19, 91, 65,0.7);
}
QComboBox:disabled{
	background-color:rgba(81,18,53,0.5);
}

QComboBox QAbstractItemView {
    color: white;
    background-color:rgba(19, 91, 65,0.7);  /*下拉框背景色*/
    outline: 0px;  /*去掉item虚线*/
    selection-color: white;/*光标所在下拉框条目的文字颜色*/
    selection-background-color: black; /*光标所在下拉框条目的背景色*/
}
QComboBox QAbstractItemView::item {
    height: 30px;   /*需要先设置cmbox->setView(new QListView());*/
    border: 1px solid transparent;
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;

    /*border-left-width:1px;
    border-left-color: white;
    border-left-style: solid;*//* just a single line */
    border-top-right-radius:10px;/* same radius as the QComboBox */
    border-bottom-right-radius:10px;
}


/*********************************************************************
这两段起作用需要在代码（python语言）中设置combBox.setView(QListView())
*/
QComboBox QAbstractItemView::item{
    min-height: 35px;
    min-width: 50px;
}
QListView::item:selected
{
    color: #531b36;
    background-color: lightgray
}
/**********************************************************************/
QComboBox::down-arrow {
    image: url(../resources/icons/arrow-down.png);
}

QComboBox::down-arrow:on {/* shift the arrow when popup is open */
    top:1px;
    left:1px;
}
/*===========================================*/
/*===================QCheckBox===============*/
QCheckBox{
    color:green;
}
QCheckBox::indicator:checked {
    color: red;
}

QCheckBox:hover {
   background-color: rgba(19, 91, 65,0.7);
}

/*===========================================*/
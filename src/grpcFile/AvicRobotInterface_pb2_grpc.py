# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import AvicRobotInterface_pb2 as AvicRobotInterface__pb2


class AvicRobotInterfaceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.task_SetTaskList = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_SetTaskList',
                request_serializer=AvicRobotInterface__pb2.SettaskInfo.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.task_SetTaskListPlus = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_SetTaskListPlus',
                request_serializer=AvicRobotInterface__pb2.SettaskInfoPlus.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.task_TerminateTask = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_TerminateTask',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.task_TerminateAllTask = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_TerminateAllTask',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.task_PauseTask = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_PauseTask',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.task_ContinueTask = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_ContinueTask',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.task_go_home = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_go_home',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.task_GetProgressOfTask = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_GetProgressOfTask',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.task_GetAllinteger_rpc = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_GetAllinteger_rpc',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.Listinteger_rpc.FromString,
                )
        self.task_GetCurrentTaskInfoWithTaskList = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_GetCurrentTaskInfoWithTaskList',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.GettaskInfoWithTaskList.FromString,
                )
        self.task_GetCurrentTaskInfo = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_GetCurrentTaskInfo',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.GettaskInfo.FromString,
                )
        self.task_go_ahead = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_go_ahead',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.task_go_back = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_go_back',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.task_setSpeed = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/task_setSpeed',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.lift_power_on = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/lift_power_on',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.lift_power_off = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/lift_power_off',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.lift_up = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/lift_up',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.lift_down = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/lift_down',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.lift_stop = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/lift_stop',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.lift_set_position = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/lift_set_position',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.lift_get_position = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/lift_get_position',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.lift_set_speed = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/lift_set_speed',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.lift_get_speed = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/lift_get_speed',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.lift_is_inplace = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/lift_is_inplace',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.led_turn_red = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/led_turn_red',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.led_turn_yellow = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/led_turn_yellow',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.led_turn_green = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/led_turn_green',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.led_turn_off = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/led_turn_off',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.led_get_status = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/led_get_status',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.hall_get = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/hall_get',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.photoelectric_switch_get = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/photoelectric_switch_get',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.bar_code_get_position = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/bar_code_get_position',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ranger_get = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ranger_get',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ranger_get_intensity = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ranger_get_intensity',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ranger_get_temperature = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ranger_get_temperature',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ptz_init = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_init',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_get_version = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_get_version',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.string_rpc.FromString,
                )
        self.ptz_get_bearing_val = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_get_bearing_val',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ptz_get_pitching_val = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_get_pitching_val',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ptz_is_bearing_inplace = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_is_bearing_inplace',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.ptz_is_pitching_inplace = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_is_pitching_inplace',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.ptz_stop = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_stop',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_turn_down = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_turn_down',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_turn_up = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_turn_up',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_turn_left = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_turn_left',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_turn_right = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_turn_right',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_set_positioning_speed = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_set_positioning_speed',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_set_cruising_speed = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_set_cruising_speed',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_get_speed = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_get_speed',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ptz_set_bearing_value = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_set_bearing_value',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_set_pitching_value = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_set_pitching_value',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_set_bearing_and_pitching = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_set_bearing_and_pitching',
                request_serializer=AvicRobotInterface__pb2.PTZPose.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_set_wiperOn = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_set_wiperOn',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_set_wiperOff = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_set_wiperOff',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_set_headlamp_on = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_set_headlamp_on',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_set_headlamp_off = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_set_headlamp_off',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_set_init_position = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_set_init_position',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_power_on = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_power_on',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_power_off = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_power_off',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_self_test = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_self_test',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ptz_left_arm_up = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_left_arm_up',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ptz_left_arm_down = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_left_arm_down',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ptz_right_arm_up = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_right_arm_up',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ptz_right_arm_down = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_right_arm_down',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ptz_set_left_arm_pitch = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_set_left_arm_pitch',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ptz_set_right_arm_pitch = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_set_right_arm_pitch',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ptz_get_left_arm_pitch = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_get_left_arm_pitch',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ptz_get_right_arm_pitch = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_get_right_arm_pitch',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.ptz_is_inplace = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ptz_is_inplace',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.pd_init = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_init',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.pd_get_position = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_get_position',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.pd_set_position = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_set_position',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.pd_is_inplace = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_is_inplace',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.pd_power_on = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_power_on',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.pd_power_off = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_power_off',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.pd_ultrasonic_basic_get = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_ultrasonic_basic_get',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.pd_ultrasonic_prpd_get = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_ultrasonic_prpd_get',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.pd_ultrasonic_prps_get = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_ultrasonic_prps_get',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.pd_tev_basic_get = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_tev_basic_get',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.pd_tev_prpd_get = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_tev_prpd_get',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.pd_tev_prps_get = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_tev_prps_get',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.pd_stretch_out = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_stretch_out',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.pd_take_back = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_take_back',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.pd_power_on_self_test = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/pd_power_on_self_test',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.driver_power_on = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/driver_power_on',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.driver_power_off = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/driver_power_off',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.nav_open_ultrasound_obstacle = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/nav_open_ultrasound_obstacle',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.nav_close_ultrasound_obstacle = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/nav_close_ultrasound_obstacle',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.nav_stopTask = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/nav_stopTask',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.nav_go_ahead = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/nav_go_ahead',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.nav_retreat = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/nav_retreat',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.nav_stopRobot = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/nav_stopRobot',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.nav_MoveToPoint = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/nav_MoveToPoint',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.nav_get_position = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/nav_get_position',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.nav_setWorkMode = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/nav_setWorkMode',
                request_serializer=AvicRobotInterface__pb2.ENUM_WORKMODE.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.nav_setSpeed = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/nav_setSpeed',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.nav_get_speed = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/nav_get_speed',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.nav_GetstopPointInPlace = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/nav_GetstopPointInPlace',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.nav_GetCarStatues = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/nav_GetCarStatues',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.CarStatus.FromString,
                )
        self.vl_init = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_init',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.vl_getstring_rpc = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_getstring_rpc',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.string_rpc.FromString,
                )
        self.vl_setZoom = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_setZoom',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.vl_getZoom = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_getZoom',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.vl_isZoomInplace = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_isZoomInplace',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.vl_zoomIn = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_zoomIn',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.vl_zoomOut = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_zoomOut',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.vl_zoomStop = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_zoomStop',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.vl_zoomInStep = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_zoomInStep',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.vl_zoomOutStep = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_zoomOutStep',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.vl_setFocus = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_setFocus',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.vl_getFocus = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_getFocus',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.vl_isFocusInplace = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_isFocusInplace',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.vl_focusIn = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_focusIn',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.vl_focusOut = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_focusOut',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.vl_focusStop = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_focusStop',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.vl_setFocusManualMode = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_setFocusManualMode',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.vl_setFocusAutoMode = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_setFocusAutoMode',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.vl_CaptureJPEGPicture = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_CaptureJPEGPicture',
                request_serializer=AvicRobotInterface__pb2.string_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                )
        self.vl_reboot = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/vl_reboot',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.ir_SaveImage = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ir_SaveImage',
                request_serializer=AvicRobotInterface__pb2.string_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.ir_StartFlir = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ir_StartFlir',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.ir_StopFlir = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ir_StopFlir',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.ir_IsConnected = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ir_IsConnected',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.ir_FocusAuto = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/ir_FocusAuto',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                )
        self.door_openDoor = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/door_openDoor',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.door_closeDoor = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/door_closeDoor',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.door_stopDoor = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/door_stopDoor',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.door_getDoorStatus = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/door_getDoorStatus',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.Door_Status.FromString,
                )
        self.relay_init = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_init',
                request_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_PTZPowerOff = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_PTZPowerOff',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_PTZPowerOn = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_PTZPowerOn',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_OpenHeadlamp = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_OpenHeadlamp',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_CloseHeadlamp = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_CloseHeadlamp',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_OpenRedLight = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_OpenRedLight',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_FlickerRedLight = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_FlickerRedLight',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_OpenYellowLight = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_OpenYellowLight',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_FlickerYellowLight = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_FlickerYellowLight',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_OpenGreenLight = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_OpenGreenLight',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_FlickerGreenLight = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_FlickerGreenLight',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_CloseAllLight = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_CloseAllLight',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_FlickerAllLight = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_FlickerAllLight',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_RadarandInertialNavPowerOff = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_RadarandInertialNavPowerOff',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )
        self.relay_RadarandInertialNavPowerOn = channel.unary_unary(
                '/AvicRobotGrpc.AvicRobotInterface/relay_RadarandInertialNavPowerOn',
                request_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
                response_deserializer=AvicRobotInterface__pb2.bool_rpc.FromString,
                )


class AvicRobotInterfaceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def task_SetTaskList(self, request, context):
        """任务
        set
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task_SetTaskListPlus(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task_TerminateTask(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task_TerminateAllTask(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task_PauseTask(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task_ContinueTask(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task_go_home(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task_GetProgressOfTask(self, request, context):
        """get
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task_GetAllinteger_rpc(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task_GetCurrentTaskInfoWithTaskList(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task_GetCurrentTaskInfo(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task_go_ahead(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task_go_back(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def task_setSpeed(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lift_power_on(self, request, context):
        """lift
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lift_power_off(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lift_up(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lift_down(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lift_stop(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lift_set_position(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lift_get_position(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lift_set_speed(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lift_get_speed(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lift_is_inplace(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def led_turn_red(self, request, context):
        """状态灯

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def led_turn_yellow(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def led_turn_green(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def led_turn_off(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def led_get_status(self, request, context):
        """0x00: 全灭 0x01：红灯亮 0x02：黄灯亮 0x03：绿灯亮
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def hall_get(self, request, context):
        """霍尔
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def photoelectric_switch_get(self, request, context):
        """光电开关
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def bar_code_get_position(self, request, context):
        """条形码
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ranger_get(self, request, context):
        """测距

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ranger_get_intensity(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ranger_get_temperature(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_init(self, request, context):
        """ptz  云台

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_get_version(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_get_bearing_val(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_get_pitching_val(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_is_bearing_inplace(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_is_pitching_inplace(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_stop(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_turn_down(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_turn_up(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_turn_left(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_turn_right(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_set_positioning_speed(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_set_cruising_speed(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_get_speed(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_set_bearing_value(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_set_pitching_value(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_set_bearing_and_pitching(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_set_wiperOn(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_set_wiperOff(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_set_headlamp_on(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_set_headlamp_off(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_set_init_position(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_power_on(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_power_off(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_self_test(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_left_arm_up(self, request, context):
        """挂轨机器人云台
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_left_arm_down(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_right_arm_up(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_right_arm_down(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_set_left_arm_pitch(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_set_right_arm_pitch(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_get_left_arm_pitch(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_get_right_arm_pitch(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ptz_is_inplace(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_init(self, request, context):
        """PartialDischargeInterface  局放
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_get_position(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_set_position(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_is_inplace(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_power_on(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_power_off(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_ultrasonic_basic_get(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_ultrasonic_prpd_get(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_ultrasonic_prps_get(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_tev_basic_get(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_tev_prpd_get(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_tev_prps_get(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_stretch_out(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_take_back(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pd_power_on_self_test(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def driver_power_on(self, request, context):
        """DriverInterface  导航
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def driver_power_off(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_open_ultrasound_obstacle(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_close_ultrasound_obstacle(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_stopTask(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_go_ahead(self, request, context):
        """rpc CarTurnLeft(void_rpc) returns (void_rpc){}
        rpc CarTurnRight(void_rpc) returns (void_rpc){}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_retreat(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_stopRobot(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_MoveToPoint(self, request, context):
        """rpc Suspend(void_rpc) returns (void_rpc){}
        rpc Continue(void_rpc) returns (void_rpc){}
        设置
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_get_position(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_setWorkMode(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_setSpeed(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_get_speed(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_GetstopPointInPlace(self, request, context):
        """rpc setRoadList(taskList) returns (Rbool){}
        rpc setRoadInfoList(roadInfo) returns (Rbool){}
        rpc setAllowTurnAround(Rbool) returns (void_rpc){}
        状态获取	
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nav_GetCarStatues(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_init(self, request, context):
        """可见光相机

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_getstring_rpc(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_setZoom(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_getZoom(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_isZoomInplace(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_zoomIn(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_zoomOut(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_zoomStop(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_zoomInStep(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_zoomOutStep(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_setFocus(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_getFocus(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_isFocusInplace(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_focusIn(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_focusOut(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_focusStop(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_setFocusManualMode(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_setFocusAutoMode(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_CaptureJPEGPicture(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vl_reboot(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ir_SaveImage(self, request, context):
        """红外

        Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ir_StartFlir(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ir_StopFlir(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ir_IsConnected(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ir_FocusAuto(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def door_openDoor(self, request, context):
        """自动门

        set
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def door_closeDoor(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def door_stopDoor(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def door_getDoorStatus(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_init(self, request, context):
        """继电器

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_PTZPowerOff(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_PTZPowerOn(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_OpenHeadlamp(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_CloseHeadlamp(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_OpenRedLight(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_FlickerRedLight(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_OpenYellowLight(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_FlickerYellowLight(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_OpenGreenLight(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_FlickerGreenLight(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_CloseAllLight(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_FlickerAllLight(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_RadarandInertialNavPowerOff(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def relay_RadarandInertialNavPowerOn(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AvicRobotInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'task_SetTaskList': grpc.unary_unary_rpc_method_handler(
                    servicer.task_SetTaskList,
                    request_deserializer=AvicRobotInterface__pb2.SettaskInfo.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'task_SetTaskListPlus': grpc.unary_unary_rpc_method_handler(
                    servicer.task_SetTaskListPlus,
                    request_deserializer=AvicRobotInterface__pb2.SettaskInfoPlus.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'task_TerminateTask': grpc.unary_unary_rpc_method_handler(
                    servicer.task_TerminateTask,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'task_TerminateAllTask': grpc.unary_unary_rpc_method_handler(
                    servicer.task_TerminateAllTask,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'task_PauseTask': grpc.unary_unary_rpc_method_handler(
                    servicer.task_PauseTask,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'task_ContinueTask': grpc.unary_unary_rpc_method_handler(
                    servicer.task_ContinueTask,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'task_go_home': grpc.unary_unary_rpc_method_handler(
                    servicer.task_go_home,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'task_GetProgressOfTask': grpc.unary_unary_rpc_method_handler(
                    servicer.task_GetProgressOfTask,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'task_GetAllinteger_rpc': grpc.unary_unary_rpc_method_handler(
                    servicer.task_GetAllinteger_rpc,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.Listinteger_rpc.SerializeToString,
            ),
            'task_GetCurrentTaskInfoWithTaskList': grpc.unary_unary_rpc_method_handler(
                    servicer.task_GetCurrentTaskInfoWithTaskList,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.GettaskInfoWithTaskList.SerializeToString,
            ),
            'task_GetCurrentTaskInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.task_GetCurrentTaskInfo,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.GettaskInfo.SerializeToString,
            ),
            'task_go_ahead': grpc.unary_unary_rpc_method_handler(
                    servicer.task_go_ahead,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'task_go_back': grpc.unary_unary_rpc_method_handler(
                    servicer.task_go_back,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'task_setSpeed': grpc.unary_unary_rpc_method_handler(
                    servicer.task_setSpeed,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'lift_power_on': grpc.unary_unary_rpc_method_handler(
                    servicer.lift_power_on,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'lift_power_off': grpc.unary_unary_rpc_method_handler(
                    servicer.lift_power_off,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'lift_up': grpc.unary_unary_rpc_method_handler(
                    servicer.lift_up,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'lift_down': grpc.unary_unary_rpc_method_handler(
                    servicer.lift_down,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'lift_stop': grpc.unary_unary_rpc_method_handler(
                    servicer.lift_stop,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'lift_set_position': grpc.unary_unary_rpc_method_handler(
                    servicer.lift_set_position,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'lift_get_position': grpc.unary_unary_rpc_method_handler(
                    servicer.lift_get_position,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'lift_set_speed': grpc.unary_unary_rpc_method_handler(
                    servicer.lift_set_speed,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'lift_get_speed': grpc.unary_unary_rpc_method_handler(
                    servicer.lift_get_speed,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'lift_is_inplace': grpc.unary_unary_rpc_method_handler(
                    servicer.lift_is_inplace,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'led_turn_red': grpc.unary_unary_rpc_method_handler(
                    servicer.led_turn_red,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'led_turn_yellow': grpc.unary_unary_rpc_method_handler(
                    servicer.led_turn_yellow,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'led_turn_green': grpc.unary_unary_rpc_method_handler(
                    servicer.led_turn_green,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'led_turn_off': grpc.unary_unary_rpc_method_handler(
                    servicer.led_turn_off,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'led_get_status': grpc.unary_unary_rpc_method_handler(
                    servicer.led_get_status,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'hall_get': grpc.unary_unary_rpc_method_handler(
                    servicer.hall_get,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'photoelectric_switch_get': grpc.unary_unary_rpc_method_handler(
                    servicer.photoelectric_switch_get,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'bar_code_get_position': grpc.unary_unary_rpc_method_handler(
                    servicer.bar_code_get_position,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ranger_get': grpc.unary_unary_rpc_method_handler(
                    servicer.ranger_get,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ranger_get_intensity': grpc.unary_unary_rpc_method_handler(
                    servicer.ranger_get_intensity,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ranger_get_temperature': grpc.unary_unary_rpc_method_handler(
                    servicer.ranger_get_temperature,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ptz_init': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_init,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_get_version': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_get_version,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.string_rpc.SerializeToString,
            ),
            'ptz_get_bearing_val': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_get_bearing_val,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ptz_get_pitching_val': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_get_pitching_val,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ptz_is_bearing_inplace': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_is_bearing_inplace,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'ptz_is_pitching_inplace': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_is_pitching_inplace,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'ptz_stop': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_stop,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_turn_down': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_turn_down,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_turn_up': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_turn_up,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_turn_left': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_turn_left,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_turn_right': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_turn_right,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_set_positioning_speed': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_set_positioning_speed,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_set_cruising_speed': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_set_cruising_speed,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_get_speed': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_get_speed,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ptz_set_bearing_value': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_set_bearing_value,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_set_pitching_value': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_set_pitching_value,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_set_bearing_and_pitching': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_set_bearing_and_pitching,
                    request_deserializer=AvicRobotInterface__pb2.PTZPose.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_set_wiperOn': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_set_wiperOn,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_set_wiperOff': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_set_wiperOff,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_set_headlamp_on': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_set_headlamp_on,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_set_headlamp_off': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_set_headlamp_off,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_set_init_position': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_set_init_position,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_power_on': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_power_on,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_power_off': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_power_off,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_self_test': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_self_test,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ptz_left_arm_up': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_left_arm_up,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ptz_left_arm_down': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_left_arm_down,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ptz_right_arm_up': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_right_arm_up,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ptz_right_arm_down': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_right_arm_down,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ptz_set_left_arm_pitch': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_set_left_arm_pitch,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ptz_set_right_arm_pitch': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_set_right_arm_pitch,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ptz_get_left_arm_pitch': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_get_left_arm_pitch,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ptz_get_right_arm_pitch': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_get_right_arm_pitch,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'ptz_is_inplace': grpc.unary_unary_rpc_method_handler(
                    servicer.ptz_is_inplace,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'pd_init': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_init,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'pd_get_position': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_get_position,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'pd_set_position': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_set_position,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'pd_is_inplace': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_is_inplace,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'pd_power_on': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_power_on,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'pd_power_off': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_power_off,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'pd_ultrasonic_basic_get': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_ultrasonic_basic_get,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'pd_ultrasonic_prpd_get': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_ultrasonic_prpd_get,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'pd_ultrasonic_prps_get': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_ultrasonic_prps_get,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'pd_tev_basic_get': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_tev_basic_get,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'pd_tev_prpd_get': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_tev_prpd_get,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'pd_tev_prps_get': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_tev_prps_get,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'pd_stretch_out': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_stretch_out,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'pd_take_back': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_take_back,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'pd_power_on_self_test': grpc.unary_unary_rpc_method_handler(
                    servicer.pd_power_on_self_test,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'driver_power_on': grpc.unary_unary_rpc_method_handler(
                    servicer.driver_power_on,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'driver_power_off': grpc.unary_unary_rpc_method_handler(
                    servicer.driver_power_off,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'nav_open_ultrasound_obstacle': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_open_ultrasound_obstacle,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'nav_close_ultrasound_obstacle': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_close_ultrasound_obstacle,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'nav_stopTask': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_stopTask,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'nav_go_ahead': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_go_ahead,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'nav_retreat': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_retreat,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'nav_stopRobot': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_stopRobot,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'nav_MoveToPoint': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_MoveToPoint,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'nav_get_position': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_get_position,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'nav_setWorkMode': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_setWorkMode,
                    request_deserializer=AvicRobotInterface__pb2.ENUM_WORKMODE.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'nav_setSpeed': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_setSpeed,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'nav_get_speed': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_get_speed,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'nav_GetstopPointInPlace': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_GetstopPointInPlace,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'nav_GetCarStatues': grpc.unary_unary_rpc_method_handler(
                    servicer.nav_GetCarStatues,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.CarStatus.SerializeToString,
            ),
            'vl_init': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_init,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'vl_getstring_rpc': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_getstring_rpc,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.string_rpc.SerializeToString,
            ),
            'vl_setZoom': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_setZoom,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'vl_getZoom': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_getZoom,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'vl_isZoomInplace': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_isZoomInplace,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'vl_zoomIn': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_zoomIn,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'vl_zoomOut': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_zoomOut,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'vl_zoomStop': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_zoomStop,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'vl_zoomInStep': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_zoomInStep,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'vl_zoomOutStep': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_zoomOutStep,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'vl_setFocus': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_setFocus,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'vl_getFocus': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_getFocus,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'vl_isFocusInplace': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_isFocusInplace,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'vl_focusIn': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_focusIn,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'vl_focusOut': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_focusOut,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'vl_focusStop': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_focusStop,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'vl_setFocusManualMode': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_setFocusManualMode,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'vl_setFocusAutoMode': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_setFocusAutoMode,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'vl_CaptureJPEGPicture': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_CaptureJPEGPicture,
                    request_deserializer=AvicRobotInterface__pb2.string_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            ),
            'vl_reboot': grpc.unary_unary_rpc_method_handler(
                    servicer.vl_reboot,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'ir_SaveImage': grpc.unary_unary_rpc_method_handler(
                    servicer.ir_SaveImage,
                    request_deserializer=AvicRobotInterface__pb2.string_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'ir_StartFlir': grpc.unary_unary_rpc_method_handler(
                    servicer.ir_StartFlir,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'ir_StopFlir': grpc.unary_unary_rpc_method_handler(
                    servicer.ir_StopFlir,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'ir_IsConnected': grpc.unary_unary_rpc_method_handler(
                    servicer.ir_IsConnected,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'ir_FocusAuto': grpc.unary_unary_rpc_method_handler(
                    servicer.ir_FocusAuto,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.void_rpc.SerializeToString,
            ),
            'door_openDoor': grpc.unary_unary_rpc_method_handler(
                    servicer.door_openDoor,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'door_closeDoor': grpc.unary_unary_rpc_method_handler(
                    servicer.door_closeDoor,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'door_stopDoor': grpc.unary_unary_rpc_method_handler(
                    servicer.door_stopDoor,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'door_getDoorStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.door_getDoorStatus,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.Door_Status.SerializeToString,
            ),
            'relay_init': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_init,
                    request_deserializer=AvicRobotInterface__pb2.integer_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_PTZPowerOff': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_PTZPowerOff,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_PTZPowerOn': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_PTZPowerOn,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_OpenHeadlamp': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_OpenHeadlamp,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_CloseHeadlamp': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_CloseHeadlamp,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_OpenRedLight': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_OpenRedLight,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_FlickerRedLight': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_FlickerRedLight,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_OpenYellowLight': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_OpenYellowLight,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_FlickerYellowLight': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_FlickerYellowLight,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_OpenGreenLight': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_OpenGreenLight,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_FlickerGreenLight': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_FlickerGreenLight,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_CloseAllLight': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_CloseAllLight,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_FlickerAllLight': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_FlickerAllLight,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_RadarandInertialNavPowerOff': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_RadarandInertialNavPowerOff,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
            'relay_RadarandInertialNavPowerOn': grpc.unary_unary_rpc_method_handler(
                    servicer.relay_RadarandInertialNavPowerOn,
                    request_deserializer=AvicRobotInterface__pb2.void_rpc.FromString,
                    response_serializer=AvicRobotInterface__pb2.bool_rpc.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AvicRobotGrpc.AvicRobotInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AvicRobotInterface(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def task_SetTaskList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_SetTaskList',
            AvicRobotInterface__pb2.SettaskInfo.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task_SetTaskListPlus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_SetTaskListPlus',
            AvicRobotInterface__pb2.SettaskInfoPlus.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task_TerminateTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_TerminateTask',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task_TerminateAllTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_TerminateAllTask',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task_PauseTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_PauseTask',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task_ContinueTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_ContinueTask',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task_go_home(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_go_home',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task_GetProgressOfTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_GetProgressOfTask',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task_GetAllinteger_rpc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_GetAllinteger_rpc',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.Listinteger_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task_GetCurrentTaskInfoWithTaskList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_GetCurrentTaskInfoWithTaskList',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.GettaskInfoWithTaskList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task_GetCurrentTaskInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_GetCurrentTaskInfo',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.GettaskInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task_go_ahead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_go_ahead',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task_go_back(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_go_back',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def task_setSpeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/task_setSpeed',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def lift_power_on(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/lift_power_on',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def lift_power_off(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/lift_power_off',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def lift_up(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/lift_up',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def lift_down(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/lift_down',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def lift_stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/lift_stop',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def lift_set_position(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/lift_set_position',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def lift_get_position(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/lift_get_position',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def lift_set_speed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/lift_set_speed',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def lift_get_speed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/lift_get_speed',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def lift_is_inplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/lift_is_inplace',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def led_turn_red(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/led_turn_red',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def led_turn_yellow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/led_turn_yellow',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def led_turn_green(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/led_turn_green',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def led_turn_off(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/led_turn_off',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def led_get_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/led_get_status',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def hall_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/hall_get',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def photoelectric_switch_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/photoelectric_switch_get',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def bar_code_get_position(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/bar_code_get_position',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ranger_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ranger_get',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ranger_get_intensity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ranger_get_intensity',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ranger_get_temperature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ranger_get_temperature',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_init',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_get_version(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_get_version',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.string_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_get_bearing_val(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_get_bearing_val',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_get_pitching_val(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_get_pitching_val',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_is_bearing_inplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_is_bearing_inplace',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_is_pitching_inplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_is_pitching_inplace',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_stop',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_turn_down(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_turn_down',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_turn_up(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_turn_up',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_turn_left(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_turn_left',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_turn_right(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_turn_right',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_set_positioning_speed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_set_positioning_speed',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_set_cruising_speed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_set_cruising_speed',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_get_speed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_get_speed',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_set_bearing_value(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_set_bearing_value',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_set_pitching_value(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_set_pitching_value',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_set_bearing_and_pitching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_set_bearing_and_pitching',
            AvicRobotInterface__pb2.PTZPose.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_set_wiperOn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_set_wiperOn',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_set_wiperOff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_set_wiperOff',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_set_headlamp_on(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_set_headlamp_on',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_set_headlamp_off(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_set_headlamp_off',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_set_init_position(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_set_init_position',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_power_on(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_power_on',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_power_off(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_power_off',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_self_test(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_self_test',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_left_arm_up(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_left_arm_up',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_left_arm_down(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_left_arm_down',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_right_arm_up(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_right_arm_up',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_right_arm_down(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_right_arm_down',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_set_left_arm_pitch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_set_left_arm_pitch',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_set_right_arm_pitch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_set_right_arm_pitch',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_get_left_arm_pitch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_get_left_arm_pitch',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_get_right_arm_pitch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_get_right_arm_pitch',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ptz_is_inplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ptz_is_inplace',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_init',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_get_position(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_get_position',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_set_position(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_set_position',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_is_inplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_is_inplace',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_power_on(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_power_on',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_power_off(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_power_off',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_ultrasonic_basic_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_ultrasonic_basic_get',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_ultrasonic_prpd_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_ultrasonic_prpd_get',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_ultrasonic_prps_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_ultrasonic_prps_get',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_tev_basic_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_tev_basic_get',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_tev_prpd_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_tev_prpd_get',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_tev_prps_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_tev_prps_get',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_stretch_out(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_stretch_out',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_take_back(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_take_back',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pd_power_on_self_test(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/pd_power_on_self_test',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def driver_power_on(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/driver_power_on',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def driver_power_off(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/driver_power_off',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def nav_open_ultrasound_obstacle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/nav_open_ultrasound_obstacle',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def nav_close_ultrasound_obstacle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/nav_close_ultrasound_obstacle',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def nav_stopTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/nav_stopTask',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def nav_go_ahead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/nav_go_ahead',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def nav_retreat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/nav_retreat',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def nav_stopRobot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/nav_stopRobot',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def nav_MoveToPoint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/nav_MoveToPoint',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def nav_get_position(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/nav_get_position',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def nav_setWorkMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/nav_setWorkMode',
            AvicRobotInterface__pb2.ENUM_WORKMODE.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def nav_setSpeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/nav_setSpeed',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def nav_get_speed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/nav_get_speed',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def nav_GetstopPointInPlace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/nav_GetstopPointInPlace',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def nav_GetCarStatues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/nav_GetCarStatues',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.CarStatus.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_init',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_getstring_rpc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_getstring_rpc',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.string_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_setZoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_setZoom',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_getZoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_getZoom',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_isZoomInplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_isZoomInplace',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_zoomIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_zoomIn',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_zoomOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_zoomOut',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_zoomStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_zoomStop',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_zoomInStep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_zoomInStep',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_zoomOutStep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_zoomOutStep',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_setFocus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_setFocus',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_getFocus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_getFocus',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_isFocusInplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_isFocusInplace',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_focusIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_focusIn',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_focusOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_focusOut',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_focusStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_focusStop',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_setFocusManualMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_setFocusManualMode',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_setFocusAutoMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_setFocusAutoMode',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_CaptureJPEGPicture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_CaptureJPEGPicture',
            AvicRobotInterface__pb2.string_rpc.SerializeToString,
            AvicRobotInterface__pb2.integer_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vl_reboot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/vl_reboot',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ir_SaveImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ir_SaveImage',
            AvicRobotInterface__pb2.string_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ir_StartFlir(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ir_StartFlir',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ir_StopFlir(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ir_StopFlir',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ir_IsConnected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ir_IsConnected',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ir_FocusAuto(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/ir_FocusAuto',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.void_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def door_openDoor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/door_openDoor',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def door_closeDoor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/door_closeDoor',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def door_stopDoor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/door_stopDoor',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def door_getDoorStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/door_getDoorStatus',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.Door_Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_init',
            AvicRobotInterface__pb2.integer_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_PTZPowerOff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_PTZPowerOff',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_PTZPowerOn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_PTZPowerOn',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_OpenHeadlamp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_OpenHeadlamp',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_CloseHeadlamp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_CloseHeadlamp',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_OpenRedLight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_OpenRedLight',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_FlickerRedLight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_FlickerRedLight',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_OpenYellowLight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_OpenYellowLight',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_FlickerYellowLight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_FlickerYellowLight',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_OpenGreenLight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_OpenGreenLight',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_FlickerGreenLight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_FlickerGreenLight',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_CloseAllLight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_CloseAllLight',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_FlickerAllLight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_FlickerAllLight',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_RadarandInertialNavPowerOff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_RadarandInertialNavPowerOff',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def relay_RadarandInertialNavPowerOn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AvicRobotGrpc.AvicRobotInterface/relay_RadarandInertialNavPowerOn',
            AvicRobotInterface__pb2.void_rpc.SerializeToString,
            AvicRobotInterface__pb2.bool_rpc.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
